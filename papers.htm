<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><!-- #BeginTemplate "/Templates/plain.dwt" --><!-- DW6 -->
	<head>
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<!-- #BeginEditable "doctitle" --> 
<title>4th International Workshop on distributed Event-Based Systems (DEBS'05) 
</title>
	<!-- #EndEditable -->
				
		<link rel="stylesheet" type="text/css" href="styles/plain.css">				 
	 	<script language="JavaScript" type="text/javascript" src="scripts/footer.js"></script>
		 
	</head>

<body>
<table class="bk1" align="center" summary="" border="0" cellspacing="0" cellpadding="0" width="100%"> 
<tr> <td valign="top"> <table summary="" border="0" cellspacing="0" cellpadding="0" width="100%"> 
<tr> <td align="center" valign="middle" height="85" WIDTH="21%"><DIV ALIGN="LEFT"><IMG SRC="images/logo.gif" WIDTH="153" HEIGHT="132"> 
</DIV></td><td class="bk2" align="center" valign="middle" height="85" WIDTH="79%"> 
<h1>4th International Workshop on Distributed Event-Based Systems (DEBS'05)<!-- Netscape Navigator (at least version 7.02) doesn't
						handle the header margins in the same was as IE.  The header
						looks best in the table if I use the bottom alignment, but
						then there is no spacing after the header in Navigator.  So,
						a simple test, if the browser is navigator, then add in a
						blank line. --> 
  <script type="text/javascript"><!--
						var nav = navigator.appName;
						if(nav!="Microsoft Internet Explorer")
							document.writeln("");
						--> </script> </h1></td></tr> 
<tr> <!-- Left coloum (links) --> <td valign="top"  class="bk1" WIDTH="20%"> <div class="dopad1"> 
<!-- padding --> <p><br> <!-- Bring the first link down a bit. --> <a class=aSpecial href="index.html">DEBS'05 
Home </a><BR> <A class=aSpecial2 HREF="history.htm">History</A></p>
<p align="center"><a href="finalProgram.pdf"><img border=0 src="images/pdf.gif" height="30"><br>
Final Program</a>      <!--<br><a class=aSpecial2 href="../invited.htm">Invited 
Talk</a><BR> <a class=aSpecial2 href="../papers.htm">Accepted Papers</a><br> <a class=aSpecial2 href="../schedule.htm">Schedule</a><br>-->
</p>
<p>
        <A class=aSpecial HREF="call.htm">Call for Papers</A><BR>
        <A class=aSpecial2 HREF="call.htm#goal">Goal</A><BR>
        <A class=aSpecial2 HREF="call.htm#theme">Workshop 
      Theme</A><BR>
      <A class=aSpecial2 HREF="call.htm#topics">Topics</A><BR>
      <A class=aSpecial2 HREF="call.htm#instructions">Submission Instructions</A><BR>
      <A class=aSpecial2 HREF="call.htm#location">Location</A></p>
<table align=center width="50%"  border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td width="50%">
		<div align="center"><a href="debs05call.pdf"><img border=0 src="images/pdf.gif" height="30"><br>
        PDF</a></div></td>
    <td width="50%"><div align="center"><a href="debs05call.txt"><img border=0 src="images/text.gif" height="30"><br>
  Text</a></div></td>
  </tr>
</table>


<p><a class=aSpecial href="papers.htm">Accepted Papers </a><BR>
  <A class=aSpecial2 HREF="http://www.computer.org/proceedings/final/icdcsw2005.htm">IEEE Author Kit </A></p>
<p><A class=aSpecial HREF="dates.htm">Important Dates</A><BR> 
    <br>
    <a class=aSpecial href="organization.htm">Organization</a><BR>
    <A class=aSpecial2 HREF="organization.htm#cochairs">Co-Chairs</A><BR>
    <A class=aSpecial2 HREF="organization.htm#organizers">Organizers</A><BR>
    <A class=aSpecial2 HREF="organization.htm#committee">Program 
  Committee</A> <br> 
</p>
</div></td><!-- end of links column --> <!-- Right column (MAIN BODY) --> 
<td valign="top" bgcolor="#ffffff"height="400" WIDTH="79%"> <!-- use dopad2 for padding in the main body --> 
<div class="dopad2"> <!-- ****************************************************** --> 
<!-- ***** Put all main body text AFTER this line. ******** --> <!-- ****************************************************** --> 
<!-- #BeginEditable "contents" --><H2>Accepted Papers

</H2>
<TABLE  width=90% BORDER="0" CELLSPACING="15" CELLPADDING="10">
  <TR>
    <TD BGCOLOR="#66CCFF">Regular Papers</TD>
  </TR>
  <TR><TD BGCOLOR="#FFFFFF"><P><B>CHR: a Distributed Hash Table for Wireless Ad Hoc Networks</B><BR>
Filipe Araujo, Luis Rodrigues, Joerg Kaiser, Changling Liu, and Carlos Mitidieri <BR><I>Universidade de Lisboa, Portugal and University of Ulm, Germany</I></P><P><I>Abstract:</I> 
This paper focuses on the problem of implementing a distributed hash
table (DHT) in wireless ad hoc networks. Scarceness of resources and
node mobility turn routing into a challenging problem and therefore, we
claim that building a DHT as an overlay network (like in wired
environments) is not the best option. Hence, we present a
proof-of-concept DHT, called Cell Hash Routing (CHR), designed from
scratch to cope with problems like limited available energy,
communication range or node mobility. CHR overcomes these problems, by
using position information to organize a DHT of clusters instead of
individual nodes. By using position-based routing on top of these
clusters, CHR is very efficient. Furthermore, its localized routing and
its load sharing schemes, make CHR very scalable in respect to network
size and density. For these reasons, we believe that CHR is a simple
and yet powerful adaptation of the DHT concept for wireless ad hoc
environments.
</P></TD></TR><TR><TD><P><B>Analysis and Algorithms for Content-based Event Matching</B><BR>
Elad Hazan, Satyen Kale, Fengyun Cao, and Jaswinder Pal Singh <BR><I>Computer Science Department, Princeton University, Princeton, USA</I></P><P><I>Abstract:</I> 
Content-based event matching is an important problem in large-scale
event-based publish/subscribe systems. However, open questions remain
in analysis of its difficulty and evaluation of its solutions. This
paper makes a few contributions toward analysis, evaluation and
development of matching algorithms. First, based on a simplified yet
generic model, we give a formal proof of hardness of matching problem
by showing its equivalence to the notoriously hard Partial Match
problem. Second, we compare two major existing matching approaches and
show that counting-based algorithms are likely to be more
computationally expensive than tree-based algorithms. Third, we observe
an important, prevalent characteristic of real-world publish/subscribe
applications, and develop a new matching algorithm called RAPIDMatch to
exploit it. Finally, we propose a new metric for evaluation of matching
algorithms. We analyze and evaluate RAPIDMatch using both the
traditional and new metrics proposed. Results show that RAPIDMatch
achieves large performance improvement over tree-based algorithm under
certain publish/subscribe scenarios.
</P></TD></TR><TR><TD BGCOLOR="#FFFFFF"><P><B>
MEDYM: Match-Early and Dynamic Multicast for Content-based Publish-Subscribe Service Networks</B><BR>
Fengyun Cao and Jaswinder Pal Singh <BR><I>Princeton University, Princeton, USA</I></P><P><I>Abstract:</I> 
Architecture design for content-based publishsubscribe service networks
has been a challenging problem, because its communication paradigm
cannot be directly supported by existing network primitives. In this
paper, we propose a new architectural design called MEDYM Match Early
with DYnamic Multicast. Unlike existing approaches, MEDYM does not rely
on static overlay networks for event delivery. Instead, an event is
matched against subscriptions early at the publishing server, to
identify destinations with matching subscriptions, and then sent to
destinations through a dynamically constructed multicast tree. This
architecture achieves low computation cost in matching and high network
efficiency in routing. We evaluate MEDYM through detailed simulations,
and compare it with the two major existing design approaches:
Content-based Forwarding and Channelization. Results show that MEDYM
significantly improves event delivery efficiency and system
scalability. We also examine closely overheads introduced in MEDYM, and
found them to be well acceptable and more than outweighed by the
benefits of the approach. We expect the MEDYM architecture to scale to
pub-sub networks of thousands of servers, which we believe is adequate
for many interesting applications in the foreseeable future.
</P></TD></TR><TR><TD><P><B>
Publish-Subscribe Tree-Maintenance over a DHT</B><BR>
Paolo Costa and Davide Frey <BR><I>Politecnico di Milano, Italy</I></P><P><I>Abstract:</I> 
Content-based publish-subscribe middleware is emerging as a promising
answer to the demands of modern highly dynamic distributed computing by
providing the necessary decoupling and flexibility. Nevertheless,
currently available systems implement event dispatching by relying on
an overlay network with unrooted tree topology but they do not provide
any mechanism to maintain it in presence of reconfiguration, thus
hampering their use in dynamic and unreliable scenarios. In this paper,
we present a novel approach to accomplish this task by exploiting a
Distributed Hash Table (DHT). Our algorithm supports arbitrary tree
topologies and deals very well with the dynamicity of network scenarios
by limiting the impact of reconfigurations induced by topology changes.
These results are confirmed by simulations which validate the
applicability of our approach in reconfigurable publishmiddleware.
</P></TD></TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>On Introducing Location Awareness in Publish-Subscribe Middleware</strong><br>
    Gianpaolo Cugola and Jose Enrique Munoz de Cote<br>
    <em>Dip. di Elettronica e Informazione, Politecnico di Milano, Milan, Italy </em></P>
    <P><I>Abstract:</I> Having the possibility of routing messages only toward specific areas
or subscribing to messages originating in specific locations seems
natural when a publish-subscribe model of communication is adopted.
Unfortunately, very few work have investigated such kind of services
and none of the most widely adopted publish-subscribe middleware
implements them. In this paper we first classify possible
location-based publish-subscribe services, then we describe an
algorithm to efficiently implement them in a distributed
publish-subscribe middleware.</P></TD>
</TR>
<TR>
  <TD><P> <strong>Publisher Mobility in Distributed Publish/Subscribe Systems</strong><br>
    Vinod Muthusamy, Milenko Petrovic, Dapeng Gao, and Hans-Arno Jacobsen<br>
    <em>Department of Electrical and Computer Engineering, University of Toronto, Canada</em> </P>
    <P><I>Abstract:</I> The decoupling of producers and consumers in time and space in the
publish/subscribe paradigm lends itself well to the support of mobile
users who roam about the environment with intermittent network
connectivity. This paper presents the first quantitative evaluation of
the factors that affect performance when mobility is introduced to a
publish/subscribe system. We formalize publisher mobility algorithms
for a distributed publish/subscribe system supporting mobile
publishers, and develop and evaluate optimizations for mobile publisher
algorithms.</P></TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>Policy-controlled Event Management for Distributed Intrusion Detection</strong><br>
    Christian Kreibich and Robin Sommer<br>
    <em>Computer Laboratory, University of Cambridge, UK and Computer Science Department, Technische Universitaet Muenchen, Germany</em> </P>
    <P><I>Abstract: </I>A powerful strategy in intrusion detection is the separation of
surveillance mechanisms from a site's policy for processing observed
events. The Bro intrusion detection system has been using the notion of
policy-neutral events as the basic building blocks for the formulation
of a site's security policy since its conception. A recent addition to
the system is the ability to exchange events with other Bro peers to
allow distributed detection. In this paper we extend Bro's existing
event model to ful ll the requirements of scalable policy-controlled
distributed event management, including mechanisms for event
publication, subscription, processing, propagation, and correlation.</P></TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>Integrating Distributed Object Transactions with Wide-Area Content-Based Publish/Subscribe Systems</strong><br>
    Anton Michlmayr and Pascal Fenkam<br>
    <em>Vienna University of Technology, Distributed Systems Group, Wien, Austria</em><br>
    <br>
        <I>Abstract: </I>Transactions are necessary for many distributed applications to deliver
reasonable results. Typically, said transaction engines enhance systems
dependability by providing atomicity, isolation, consistency, and
durability. Yet, emerging paradigms in distributed systems seem to
challenge these traditional concepts. This paper presents early results
in integrating distributed object transactions with content-based
publish/subscribe systems. Essentially, the paper illustrates a novel
and generic integration framework that 1) supports application
dependent message failure models and 2) exhibits a full messaging
transaction mechanism. We discuss integration challenges, analyze
middleware requirements, and position our attempt among existing
approaches.
</P>
    </TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>Integrating Databases with Publish/Subscribe</strong><br>
    Luis Vargas, Jean Bacon, and Ken Moody<br>
    <em>Computer Laboratory, University of Cambridge, Cambridge, UK </em></P>
    <P><I>Abstract: </I>Publish/subscribe is emerging as an appropriate communication paradigm
for large-scale, widely-distributed systems. In this paper, we describe
our work on integrating active databases with publish/subscribe, using
PostgreSQL and Hermes as the experimental context. In the proposed
architecture, each database manager defines and advertises change
events, in contrast with a continuous query model. Advertised events,
which may span a number of physical relations, correspond to the
virtual relations of a security view. Clients subscribe to events of
interest, and can refine their subscriptions through content-based
filter expressions. An event is published whenever a database change,
detected via a dynamic triggering layer, matches some active
subscription. Security and routing of database events are handled in
the same way as for conventional Hermes events.</P></TD>
</TR>
<TR>
  <TD bgcolor="#66CCFF">Short Papers </TD>
</TR>
<TR>
  <TD><P> <strong>A Two-way Publish-Subscribe System (Position Paper)</strong><br>
    Ingar M&aelig;hlum Arntzen and Dag Johansen<br>
    <em>Dept. Computer Science University of Troms&oslash;, Norway </em></P>
    <P><I>Abstract: </I>Anonymity between publishers and subscribers is an implicit assumption
for many publish-subscribe systems. By restructuring a popular
pull-based Web application, the online marketplace, to fit the
publish-subscribe paradigm, we discovered that absolute anonymity is
not always an attractive property. We present a publish-subscribe
system that allows providers to access limited information on
consumers, and vice-versa. Especially, consumers may subscribe to
provider-information (product publications), and providers may
subscribe to consumer-information (consumer-subscriptions). We call
this structure a Two-way Publish-Subscribe System.</P></TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>Low Latency Optimisation of Content Based Publish Subscribe for Real-Time Mobile Gaming Applications</strong><br>
    Duncan McCaffery and Joe Finney<br>
    <em>Computing Department, Lancaster University, Lancaster, United Kingdom </em></P>
    <P><I>Abstract: </I>In recent years real-time multiplayer networked gaming has grown in
popularity due to exciting challenges posed by competing with human
opponents. It is therefore very likely that the introduction of more
powerful portable wireless hand held devices will motivate a similar
demand for fast action collaborative multiplayer gaming capabilities on
those platforms also. In this paper we argue that the commonly used
communication architectures for today s multiplayer gaming applications
will not work in the mobile wireless domain. We address this argument
by introducing our own architecture based on publish subscribe and
structured peer to peer that offers a novel interest managed, spatially
partitioned solution. Finally we evaluate this approach and suggest
that an optimal solution also requires knowledge of both the network
interface in use and of the underlying network topology.</P></TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>A Distributed Alerting Service for Open Digital Library Software</strong><br>
    Annika Hinze and George Buchanan<br>
    <em>Department of Computer Science, University of Waikato, New Zealand and UCL Interaction Centre, University College London, United Kingdom </em></P>
    <P><I>Abstract: </I>Alerting for Digital Libraries is an important and useful feature for
the library users. To date, two independent services and a few
publisher-hosted proprietary services have been developed. Here, we
address the problem of integrating alerting as functionality into open
source software for distributed digital libraries. For this application
existing solutions are insufficient; new ways have to be found for
supporting a fragmented network of distributed digital library servers.
We propose the design and usage of a distributed Directory Service.
This paper also introduces our hybrid approach using two networks and a
combination of different distributed routing strategies for event
filtering.</P></TD>
</TR>
<TR>
  <TD bgcolor="#FFFFFF"><P> <strong>On the Benefits of Non-Canonical Filtering in Publish/Subscribe Systems</strong><br>
    Sven Bittner and Annika Hinze<br>
    <em>University of Waikato, Hamilton, New Zealand </em></P>
    <P><I>Abstract:</I> Current matching approaches in pub/sub systems only allow conjunctive
subscriptions. Arbitrary subscriptions are transformed to canonical
expressions, e.g., DNFs, and are treated as several conjunctive
subscriptions. This technique is known from database systems and allows
us to apply more efficient filtering algorithms. Since pub/sub systems
are the contrary to traditional database systems, it is questionable if
filtering several canonical subscriptions is the most efficient and
scalable way of dealing with arbitrary subscriptions. In this paper we
show that our filtering approach supporting arbitrary boolean
subscriptions is more scalable and efficient than current matching
algorithms using transformations of subscriptions to DNFs.</P></TD>
</TR>
<TR>
  <TD BGCOLOR="#FFFF99"><div align="center"> Click <a href="http://www.computer.org/proceedings/final/icdcsw2005.htm">here</a> for the IEEE author's kit. </div></TD>
</TR>
</TABLE>
<P>&nbsp;</P><!-- #EndEditable --> <!-- ****************************************************** --> 
<!-- ***** Put all main body text BEFORE this line. ******* --> <!-- ****************************************************** --> 
</div></td><!-- end of right column (main body) --> </tr><!-- end of second row --> 
<!-- Last row of table for copyright, date, etc. --> <tr> <!-- Left column; leave empty or use W3C valid image. --> 
<td align=center WIDTH="21%"> <script language="JavaScript" type="text/javascript">
							<!--
								//compliance();
							// -->
						</script> </td><!-- Right column; (c), last updated, etc. --> 
<td align=right bgcolor="#ffffff" valign=bottom WIDTH="79%"> <div class="dopad1"><!-- padding --> 
<div class="fontSmall"><!-- smaller font --> <script language="JavaScript" type="text/javascript">
									<!--
                       		 		myFooter()
									// -->
                      			</script> </div></div></td></tr> </table><!-- End Inner Table --> 
<!-- End Outer Table --> </td></tr> </table>
  </body>
<!-- #EndTemplate --></html>
